{"version":3,"sources":["components/SvgImage.tsx","public/flower.svg","components/TriangleButton.tsx","components/Label.tsx","components/HorizontalStepper.tsx","components/Button.tsx","components/Breather.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SvgImage","alt","className","path","src","TriangleButton","onClick","invert","defaultProps","Label","text","HorizontalStepper","value","decrease","increase","Button","Breather","useState","minutes","setMinutes","isRunning","setRunning","flower","setTimeout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKAeeA,EARE,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,KAC/B,OACI,8BACI,qBAAKD,UAAWA,EAAWE,IAAKD,EAAMF,IAAKA,OCVxC,MAA0B,mCCOnCI,EACF,SAAC,GAGO,IAFHC,EAEE,EAFFA,QACAC,EACE,EADFA,OAED,OACI,qBACID,QAASA,EACTJ,UAAW,YAAcK,EAAS,qBAAuB,OAMzEF,EAAeG,aAAe,CAC1BD,QAAQ,GAGGF,QCNAI,EAZX,SAAC,GAEO,IADHC,EACE,EADFA,KAED,OACI,qBACIR,UAAU,QADd,SAGKQ,KCOFC,EAVX,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SACf,OACI,sBAAKZ,UAAW,MAAhB,UACI,cAAC,EAAD,CAAgBK,QAAQ,EAAMD,QAASO,IACvC,cAAC,EAAD,CAAOH,KAAME,IACb,cAAC,EAAD,CAAgBN,QAASQ,QCM1BC,EAdX,SAAC,GAGO,IAFHL,EAEE,EAFFA,KACAJ,EACE,EADFA,QAED,OACI,wBACIA,QAASA,EACTJ,UAAU,MAFd,SAIKQ,KCVJM,EAAW,WACpB,MAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAkBC,EAAlB,KAuBA,OACI,qCACI,cAAC,EAAD,CAAUlB,KAAMmB,EAAQpB,UAAWkB,EAAY,uBAAyB,kBACvEA,EAAY,KAAO,qCAChB,cAAC,EAAD,CAAmBR,MAAK,UAAKM,EAAL,YAAwBL,SAjBpC,WAEhBM,EADAD,GAAW,EACA,EAEAA,EAAU,IAcEJ,SA1BP,WAEhBK,EADAD,GAAW,GACA,GAEAA,EAAU,MAuBjB,cAAC,EAAD,CAAQZ,QAXR,WACRe,GAAW,GACXE,YAAW,kBAAMF,GAAW,KAAkB,IAAVH,EAAiB,KASvBR,KAAM,iBC3B7Bc,MARf,WACI,OACI,qBAAKtB,UAAU,YAAf,SACI,cAAC,EAAD,OCQGuB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,K","file":"static/js/main.99536828.chunk.js","sourcesContent":["import * as React from 'react';\n\ntype Props = {\n    path: string;\n    alt?: string;\n    className?: string;\n};\nconst SvgImage = ({alt, className, path}: Props) => {\n    return (\n        <div>\n            <img className={className} src={path} alt={alt}/>\n        </div>\n    );\n};\n\nexport default SvgImage\n","export default __webpack_public_path__ + \"static/media/flower.19b11709.svg\";","import React from \"react\";\n\ninterface TriangleButtonProperties {\n    onClick: () => void;\n    invert?: boolean;\n}\n\nconst TriangleButton: React.FC<TriangleButtonProperties> =\n    ({\n         onClick,\n         invert,\n     }) => {\n        return (\n            <div\n                onClick={onClick}\n                className={'triangle' + (invert ? ' flip-horizontally' : '')}\n            >\n            </div>\n        )\n    }\n\nTriangleButton.defaultProps = {\n    invert: false\n}\n\nexport default TriangleButton\n","import React from \"react\";\n\ninterface LabelProperties {\n    text: string;\n}\n\nconst Label: React.FC<LabelProperties> =\n    ({\n         text,\n     }) => {\n        return (\n            <div\n                className='label'\n            >\n                {text}\n            </div>\n        )\n    }\n\nexport default Label\n","import React from \"react\";\nimport TriangleButton from \"./TriangleButton\";\nimport Label from \"./Label\";\n\ninterface HorizontalStepperProperties {\n    value: string;\n    decrease: () => void;\n    increase: () => void;\n}\n\nconst HorizontalStepper: React.FC<HorizontalStepperProperties> =\n    ({value, decrease, increase}) => {\n        return (\n            <div className={'row'}>\n                <TriangleButton invert={true} onClick={decrease}/>\n                <Label text={value}/>\n                <TriangleButton onClick={increase}/>\n            </div>\n        )\n    }\n\nexport default HorizontalStepper\n","import React from \"react\";\n\ninterface ButtonProperties {\n    text: string;\n    onClick: () => void;\n}\n\nconst Button: React.FC<ButtonProperties> =\n    ({\n         text,\n         onClick\n     }) => {\n        return (\n            <button\n                onClick={onClick}\n                className='btn'\n            >\n                {text}\n            </button>\n        )\n    }\n\nexport default Button\n","import * as React from 'react';\nimport {useState} from 'react';\nimport SvgImage from \"./SvgImage\";\nimport flower from \"../public/flower.svg\";\nimport HorizontalStepper from \"./HorizontalStepper\";\nimport Button from \"./Button\";\n\nexport const Breather = () => {\n    const [minutes, setMinutes] = useState(5)\n    const [isRunning, setRunning] = useState(false)\n\n    const increaseMinutes = () => {\n        if (minutes >= 60) {\n            setMinutes(60);\n        } else {\n            setMinutes(minutes + 5);\n        }\n    }\n\n    const decreaseMinutes = () => {\n        if (minutes <= 5) {\n            setMinutes(5)\n        } else {\n            setMinutes(minutes - 5);\n        }\n    }\n\n    const run = () => {\n        setRunning(true);\n        setTimeout(() => setRunning(false), minutes * 1000 * 60)\n    }\n\n    return (\n        <>\n            <SvgImage path={flower} className={isRunning ? 'flower flower-static' : 'flower-static'}/>\n            {isRunning ? null : <>\n                <HorizontalStepper value={`${minutes} minutes`} decrease={decreaseMinutes}\n                                   increase={increaseMinutes}/>\n                <Button onClick={run} text={\"Begin\"}/>\n            </>}\n        </>\n    );\n};\n","import React from 'react';\nimport {Breather} from \"./components/Breather\";\n\nfunction App() {\n    return (\n        <div className=\"container\">\n            <Breather/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}